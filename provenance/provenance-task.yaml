apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: distroless-provenance
  annotations:
    description: |
      Takes in the distroless repo as an input and builds & pushes distroless images.
spec:
  results:
    - name: IMAGES
  params:
    - name: PROJECT_ID
      default: distroless
    - name: CHAINS-GIT_COMMIT
    - name: CHAINS-GIT_URL
      default: https://github.com/GoogleContainerTools/distroless
  steps:
    - name: bazel
      image: gcr.io/cloud-marketplace-containers/google/bazel:3.4.1
      env:
      - name: PROJECT_ID
        value: $(params.PROJECT_ID)
      - name: REGISTRY
        value: insecure-registry.default.svc.cluster.local:5000
      - name: COMMIT_SHA
        value: $(params.CHAINS-GIT_COMMIT)
      script: |
        #!/bin/sh
        set -ex

        git clone $(params.CHAINS-GIT_URL)
        cd distroless
        git checkout $(params.CHAINS-GIT_COMMIT)

        # Make sure python points to python3
        update-alternatives --install /usr/bin/python python /usr/bin/python3 0

        bazel build //package_manager:dpkg_parser.par

        bazel build --jobs=1 @package_bundle_amd64_debian10//file:packages.bzl
        bazel build --jobs=1 @package_bundle_arm_debian10//file:packages.bzl
        bazel build --jobs=1 @package_bundle_arm64_debian10//file:packages.bzl
        bazel build --jobs=1 @package_bundle_s390x_debian10//file:packages.bzl
        bazel build --jobs=1 @package_bundle_ppc64le_debian10//file:packages.bzl
        bazel build --jobs=1 @package_bundle_amd64_debian11//file:packages.bzl
        bazel build --jobs=1 @package_bundle_arm_debian11//file:packages.bzl
        bazel build --jobs=1 @package_bundle_arm64_debian11//file:packages.bzl
        bazel build --jobs=1 @package_bundle_s390x_debian11//file:packages.bzl
        bazel build --jobs=1 @package_bundle_ppc64le_debian11//file:packages.bzl

        bazel run //:publish

    - name: crane
      image: golang:1.16
      env:
      - name: REGISTRY
        value: insecure-registry.default.svc.cluster.local:5000
      - name: COMMIT_SHA
        value: $(params.CHAINS-GIT_COMMIT)
      - name: PROVENANCE_IMAGES
        value: base static cc
      - name: PROVENANCE_TAGS
        value: latest-amd64 $(params.CHAINS-GIT_COMMIT)
      script: |
        #!/bin/sh
        set -ex

        go install github.com/google/go-containerregistry/cmd/crane@latest

        for image in $PROVENANCE_IMAGES 
        do 
            for tag in $PROVENANCE_TAGS
            do
                digest=$(crane digest $REGISTRY/$(params.PROJECT_ID)/$image:$tag)
                echo gcr.io/$(params.PROJECT_ID)/$image@$digest, >> $(results.IMAGES.path)
            done
        done
